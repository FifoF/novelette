%% This is file `novelette-language.sty',
%% part of `novelette' document class.
%% Copyright 2023 Robert Allgeyer.
%%
%% This file may be distributed and/or modified under the
%% conditions of the LaTeX Project Public License, either version 1.3c
%% of this license or (at your option) any later version.
%% The latest version of this license is in
%%    http://www.latex-project.org/lppl.txt
%% and version 1.3c or later is part of all distributions of LaTeX
%% version 2005/12/01 or later.
%%
\ProvidesFile{novelette-language.sty}%
[2023/01/20 v0.2 LaTeX file (language settings)]
%%


%% LANGUAGE
%% ----------------------------------------------------------------------------
% Novelette is intended for popular fiction, written in a single language.
% So, you may set only one main language, which will be used throughout
% your book for hyphenation patterns. The language does not implement other
% LaTeX-related features such as style of dates and times. Only hyphenation!
% Your choice of language is not stored in the PDF metadata.
%   You may still write words and phrases in another language. You may even
% set one main language, then write in an entirely different language.
% Novelette will not complain. It does not know or care what you write.
% But words in the other language will be hyphenated according to the patterns
% of the main language. This may or may not be typogaphically incorrect.
% You can always manually hyphenate or un-hyphenate foreign words.  
%   The default hyphenation uses the old TeX "english" patterns. This is
% part of every TeX system. It will be used if you do not set language,
% or use an invalid language code, or more than one language. In these cases,
% a warning is issued.
%   Novelette does not provide automatic spacing adjustments, which is
% used by French. Do it manually.
% Novelette does not provide automatic time and date format. In a work of
% fiction, you will hardly ever need it. Type it yourself!
%   If you need `lipsum', it is not available. Novelette has built-in nonsense
% text, available in document body by \fillertext command.
%%



%% Modified code from package `luahyphenrules'.
%% Copyright (C) 2016-2020 Javier Bezos.
%% Also see file `babel.dtx'.
%% LPPL 1.3+.
\begingroup
  \toks@{}
  \count@\z@ % 0=start, 1=0th, 2=normal
  \def\bblnvt@process@line#1#2 #3 #4 {%
    \ifx=#1%
      \bblnvt@process@synonym{#2}%
    \else
      \bblnvt@process@language{#1#2}{#3}{#4}%
    \fi
    \ignorespaces%
  }
  \def\bbl@manylang{%
    \ifnum\bbl@last>\@ne
      \PackageInfo{luahyphenrules}{Non-standard hyphenation setup}%
    \fi
    \let\bbl@manylang\relax%
  }
  \def\bblnvt@process@language#1#2#3{%
    \ifcase\count@
      \@ifundefined{zth@#1}{\count@\tw@}{\count@\@ne}%
    \or
      \count@\tw@
    \fi
    \ifnum\count@=\tw@
      \expandafter\addlanguage\csname l@#1\endcsname
      \language\allocationnumber
      \chardef\bbl@last\allocationnumber
      \bbl@manylang
      \let\bbl@elt\relax
      \xdef\bbl@languages{%
        \bbl@languages\bbl@elt{#1}{\the\language}{#2}{#3}%
      }%
    \fi
    \the\toks@
    \toks@{}%
  }
  \def\bblnvt@process@synonym@aux#1#2{%
    \global\expandafter\chardef\csname l@#1\endcsname#2\relax
    \let\bbl@elt\relax
    \xdef\bbl@languages{%
      \bbl@languages\bbl@elt{#1}{#2}{}{}%
    }%
  }
  \def\bblnvt@process@synonym#1{%
    \ifcase\count@
      \toks@\expandafter{\the\toks@\relax\bblnvt@process@synonym{#1}}%
    \or
      \@ifundefined{zth@#1}{\bblnvt@process@synonym@aux{#1}{0}}{}%
    \else
      \bblnvt@process@synonym@aux{#1}{\the\bbl@last}%
    \fi%
  }
  \ifx\bbl@languages\@undefined
    \chardef\l@english\z@
    \chardef\l@USenglish\z@
    \chardef\bbl@last\z@
    \global\@namedef{bbl@hyphendata@0}{{hyphen.tex}{}}
    \gdef\bbl@languages{%
      \bbl@elt{english}{0}{hyphen.tex}{}%
      \bbl@elt{USenglish}{0}{}{}%
    }
  \else
    \def\bbl@elt#1#2#3#4{%
      \ifnum#2>\z@\else\noexpand\bbl@elt{#1}{#2}{#3}{#4}%
      \fi%
    }%
    \xdef\bbl@languages{\bbl@languages}%
  \fi
  \def\bbl@elt#1#2#3#4{\@namedef{zth@#1}{}}
  \bbl@languages
  \openin1=language.dat
  \ifeof1
    \ClassWarning{novelette}{Did not find file language.dat.^^J%
      Until this issue is fixed, NO HYPHENATION.}%
    \gdef\nvt@lang{nohyphenation}%
  \else
    \loop
      \endlinechar\m@ne
      \read1 to \bbl@line
      \endlinechar`\^^M
      \if T\ifeof1F\fi T\relax
        \ifx\bbl@line\@empty\else
          \edef\bbl@line{\bbl@line\space\space\space}%
          \expandafter\bblnvt@process@line\bbl@line\relax
        \fi
    \repeat
  \fi
\endgroup
\def\bbl@get@enc#1:#2:#3\@@@{\def\bbl@hyph@enc{#2}}
\newcatcodetable\bbl@tempcattbl
\def\bbl@luapatterns#1#2{%
  \bbl@get@enc#1::\@@@
  \setbox\z@\hbox\bgroup
    \begingroup
      \savecatcodetable\bbl@tempcattbl
      \catcodetable\catcodetable@latex
      \input #1\relax
      \catcodetable\bbl@tempcattbl
    \endgroup
    \def\bbl@tempa{#2}%
    \ifx\bbl@tempa\@empty\else
      \input #2\relax
    \fi
  \egroup%
}
%%
\newcommand\HyphenRules[1]{%
  \language=\expandafter\ifx\csname l@#1:\f@encoding\endcsname\relax
    \@ifundefined{l@#1}{%
      \z@
      \gdef\nvc@lang{nohyphenation}
    }{
      \csname l@#1\endcsname \edef\bbl@tempa{#1}%
    }%
  \else
    \csname l@#1:\f@encoding\endcsname
    \edef\bbl@tempa{#1:\f@encoding}%
  \fi\relax
  \@ifundefined{bbl@hyphendata@\the\language}{%
    \def\bbl@elt##1##2##3##4{%
      \ifnum##2=\csname l@\bbl@tempa\endcsname%
        \def\bbl@tempb{##3}%
        \ifx\bbl@tempb\@empty\else%
          \def\bbl@tempc{{##3}{##4}}%
        \fi
        \expandafter\xdef\csname bbl@hyphendata@##2\endcsname{\bbl@tempc}%
      \fi%
    }%
    \bbl@languages
    \@ifundefined{bbl@hyphendata@\the\language}{}{%
      \expandafter\expandafter\expandafter\bbl@luapatterns
      \csname bbl@hyphendata@\the\language\endcsname
    }%
  }{}%
  \@ifundefined{bbl@hyphendata@\the\language}{
    \nvt@warnDNFH % Did not find hyphenation.
    \gdef\nvt@lang{nohyphenation}
  }{}%
}
%% End code modified from `luahyphenrules.sty'.


%%
\def\nvt@langlist{:nohyphenation: :english: :usenglishmax: :british: %
  :german: :ngerman: :german-x-latest: :ngerman-x-latest: :swissgerman: %
  :french: :spanish: :portuguese: :italian: :catalan: :occitan: %
  :dutch: :danish: :norwegian: :nynorsk: :bokmal: :swedish: :icelandic: %
  :basque: :finnish: %
}
%%


%%
\def\nvt@lang{english}
\newcommand\setlang[1]{
  \StrDel{#1}{ }[\nvt@temp@s]
  \IfSubStr{\nvt@langlist}{:\nvt@temp@s:}{
    \xdef\nvt@lang{\nvt@temp@s}
  }{
    \nvt@errLNOL % Language not on list.
  }
}
%%


%% AtEndPreamble:
\def\nvt@process@language{\HyphenRules{\nvt@lang}}
%%



%%
\endinput
%%
%% End of file `novelette-language.sty'.
