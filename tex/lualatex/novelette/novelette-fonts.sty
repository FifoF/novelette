%% This is file `novelette-fonts.sty',
%% part of `novelette' document class.
%% Copyright 2023 Robert Allgeyer.
%%
%% This file may be distributed and/or modified under the
%% conditions of the LaTeX Project Public License, either version 1.3c
%% of this license or (at your option) any later version.
%% The latest version of this license is in
%%    http://www.latex-project.org/lppl.txt
%% and version 1.3c or later is part of all distributions of LaTeX
%% version 2005/12/01 or later.
%%
\ProvidesFile{novelette-fonts.sty}%
[2023/01/20 v0.2 LaTeX file (font settings and defaults)]
%%


%% CHARACTER SET
% Novelette measures tallest (above baseline) and deepest (below baseline)
% characters in Latin-1. If your main language uses taller|deeper characters,
% you should add them to the string. This prevents too many lines per page.
\newcommand\charmeasure[1]{\gdef\nvt@charmeasure{3456789JÀÁÂÃÄÅÇçjfhlygpqþ#1}}
\charmeasure{}
%%


%% Developer tool, for testing fonts. If used, must precede any \setfont.
\newcommand\kernoff{\gdef\nvt@maybekern{}}
\def\nvt@maybekern{Kerning=On,}
%%


%% FONT SELECTION (before fontspec loads)
% These commands may be used in Preamble. They merely save the settings.
% Later, fonts are created by \nvt@process@ macros.
\DeclareDocumentCommand\setfont{mmO{}}{
  \def\nvt@temp@s{main head name desc note deco alt init}
  \IfSubStr{\nvt@temp@s}{#1}{}{\nvt@errBFASF{#1}} % Bad first argument for setfont.
  \def\nvt@temp@s{Color color Colour colour Opacity opacity}
  \IfSubStr{\nvt@temp@s}{#3}{\nvt@errNCOF}{} % No color or opacity in font.
  \ifthenelse{\equal{#1}{main}}{\gdef\nvt@main@font{#2}\gdef\nvt@main@feat{#3}}{}
  \ifthenelse{\equal{#1}{head}}{\gdef\nvt@head@font{#2}\gdef\nvt@head@feat{#3}}{}
  \ifthenelse{\equal{#1}{name}}{\gdef\nvt@name@font{#2}\gdef\nvt@name@feat{#3}}{}
  \ifthenelse{\equal{#1}{desc}}{\gdef\nvt@desc@font{#2}\gdef\nvt@desc@feat{#3}}{}
  \ifthenelse{\equal{#1}{note}}{\gdef\nvt@note@font{#2}\gdef\nvt@note@feat{#3}}{}
  \ifthenelse{\equal{#1}{deco}}{\gdef\nvt@deco@font{#2}\gdef\nvt@deco@feat{#3}}{}
  \ifthenelse{\equal{#1}{alt}}{\gdef\nvt@alt@font{#2}\gdef\nvt@alt@feat{#3}}{}
  \ifthenelse{\equal{#1}{init}}{\gdef\nvt@init@font{#2}\gdef\nvt@init@feat{#3}}{}
}
\@onlypreamble\setfont
%%


%%
\def\nvt@pickdefaultfont{
  \gdef\nvt@main@feat{}
  \IfFontExistsTF{Swainson}{
    \gdef\nvt@main@font{Swainson}
  }{
    \IfFontExistsTF{EB Garamond}{
      \gdef\nvt@main@font{EB Garamond}
    }{
      \IfFontExistsTF{Libertinus Serif}{
        \gdef\nvt@main@font{Libertinus Serif}
      }{
        \IfFontExistsTF{Latin Modern Roman}{ % Almost all TeX has it.
          \gdef\nvt@main@font{Latin Modern Roman}
        }{\nvt@errRNDMF} % Really no default main font.
      }
    }
  }
}
%%


%%
\def\nvt@process@mainfont{ % After fontspec loads.
  \defaultfontfeatures{} % Reset.
  \defaultfontfeatures[\rmfamily,\sffamily]{\nvt@maybekern Numbers=OldStyle,%
    Ligatures=TeX,}
  \ifdefined\nvt@main@font
    \IfFontExistsTF{\nvt@main@font}{}{
      \nvt@warnNMFF{\nvt@main@font} % No main font found.
      \nvt@pickdefaultfont
    }
  \else
    \nvt@pickdefaultfont
  \fi
  \setmainfont{\nvt@main@font}[\nvt@main@feat]
  \let\mainfont\rmfamily\relax % Backwards compatibility.
}
%%


%% A "well-behaved" font has a Latin-1 character set in which the total height
% from lowest descender (gjy) to heightest ascender (accents over capitals)
% does not exceed 1.2em. If font is not well-behaved, it is scaled to fit.
\def\nvt@rescale@mainfont{
  \sbox0{\mainfont \nvt@charmeasure}
  \FPadd{\nvt@temp@d}{\strip@pt\ht0}{\strip@pt\dp0}
  \FPmul{\nvt@temp@n}{\strip@pt\nvt@typesize}{1.2}
  \FPifgt{\nvt@temp@d}{\nvt@temp@n}
    \FPdiv{\nvt@temp@r}{\nvt@temp@n}{\nvt@temp@d}
  \else
    \def\nvt@temp@r{1}
  \fi
  \FPtrunc{\nvt@temp@r}{\nvt@temp@r}{3}
  \FPclip{\nvt@temp@r}{\nvt@temp@r}
  \xdef\nvt@mainrescale{\nvt@temp@r}
  \global\deflength\nvt@ascn{\nvt@mainrescale\ht0}
  \global\deflength\nvt@dscn{\nvt@mainrescale\dp0}
  \FPifeq{\nvt@mainrescale}{1}\else
    \xdef\nvt@temp@s{\nvt@main@feat}
    \xdef\nvt@main@feat{\nvt@temp@s,ScaleAgain=\nvt@mainrescale}
  \fi
  \StrSubstitute{\nvt@main@feat}{,,}{,}[\nvt@main@feat]
  \IfBeginWith{\nvt@main@feat}{,}{\StrGobbleLeft{\nvt@main@feat}{1}[\nvt@main@feat]}{}
  \setmainfont{\nvt@main@font}[\nvt@main@feat]
  \ifthenelse{\equal{\nvt@main@feat}{}}{\def\nvt@temp@s{}}{\def\nvt@temp@s{[\nvt@main@feat]}}
  \xdef\log@mainfont{\string\setfont{main}{\nvt@main@font}\nvt@temp@s}
  \let\mainfont\rmfamily\relax % Backwards compatibility.
}
%%


%%
\def\nvt@process@headfont{
  \ifdefined\nvt@head@font\else\xdef\nvt@head@font{\nvt@main@font}\fi
  \ifdefined\nvt@head@feat\else\gdef\nvt@head@feat{}\fi
  \IfFontExistsTF{\nvt@head@font}{
    \newfontfamily\nvt@headfont{\nvt@head@font}[\nvt@head@feat]
  }{
    \nvt@warnNFF{\nvt@head@font}
    \newfontfamily\nvt@headfont{\nvt@main@font}[ScaleAgain=\nvt@mainrescale]
  }
}
%%


%%
\def\nvt@rescale@headfont{
  \sbox0{{\nvt@headfont \nvt@charmeasure}}
  \FPdiv{\nvt@temp@n}{\strip@pt\nvt@ascn}{\strip@pt\ht0}
  \FPdiv{\nvt@temp@d}{\strip@pt\nvt@ascn}{\strip@pt\dp0}
  \FPmin{\nvt@temp@n}{\nvt@temp@n}{\nvt@temp@d}
  \FPmin{\nvt@temp@n}{\nvt@temp@n}{1}
  \FPtrunc{\nvt@temp@n}{\nvt@temp@n}{3}
  \FPclip{\nvt@temp@n}{\nvt@temp@n}
  \xdef\nvt@headrescale{\nvt@temp@n}
  \FPifeq{\nvt@headrescale}{1}\else
    \xdef\nvt@temp@s{\nvt@head@feat}
    \xdef\nvt@head@feat{\nvt@temp@s,ScaleAgain=\nvt@headrescale}
  \fi
  \StrSubstitute{\nvt@head@feat}{,,}{,}[\nvt@head@feat]
  \IfBeginWith{\nvt@head@feat}{,}{\StrGobbleLeft{\nvt@head@feat}{1}[\nvt@head@feat]}{}
  \renewfontfamily\nvt@headfont{\nvt@head@font}[\nvt@head@feat]
  \ifthenelse{\equal{\nvt@head@feat}{}}{\def\nvt@temp@s{}}{\def\nvt@temp@s{[\nvt@head@feat]}}
  \xdef\log@headfont{\string\setfont{head}{\nvt@head@font}\nvt@temp@s}
}
%%


%%
\def\nvt@process@otherfonts{
  % name font:
  \ifdefined\nvt@name@font\else\xdef\nvt@name@font{\nvt@main@font}\fi
  \ifdefined\nvt@name@feat\else\gdef\nvt@name@feat{Scale=1.8}\fi
  \IfFontExistsTF{\nvt@name@font}{}{
    \nvt@warnNFF{\nvt@name@font}
    \xdef\nvt@name@font{\nvt@main@font}
  }
  \newfontfamily\nvt@namefont{\nvt@name@font}[\nvt@name@feat]
  \ifthenelse{\equal{\nvt@name@feat}{}}{\def\nvt@temp@s{}}{\def\nvt@temp@s{[\nvt@name@feat]}}
  \xdef\log@namefont{\string\setfont{name}{\nvt@name@font}\nvt@temp@s}
  % desc font:
  \ifdefined\nvt@desc@font\else\xdef\nvt@desc@font{\nvt@main@font}\fi
  \ifdefined\nvt@desc@feat\else\gdef\nvt@desc@feat{Scale=1.33}\fi
  \IfFontExistsTF{\nvt@desc@font}{}{
    \nvt@warnNFF{\nvt@desc@font} % No font found.
    \xdef\desc@font{\nvt@main@font}
  }
  \newfontfamily\nvt@descfont{\nvt@desc@font}[\nvt@desc@feat]
  \ifthenelse{\equal{\nvt@desc@feat}{}}{\def\nvt@temp@s{}}{\def\nvt@temp@s{[\nvt@desc@feat]}}
  \xdef\log@descfont{\string\setfont{desc}{\nvt@desc@font}\nvt@temp@s}
  % note font:
  \ifdefined\nvt@note@font\else\xdef\nvt@note@font{\nvt@main@font}\fi
  \ifdefined\nvt@note@feat\else\gdef\nvt@note@feat{}\fi
  \IfFontExistsTF{\nvt@note@font}{}{
    \nvt@warnNFF{\nvt@note@font} % No font found.
    \xdef\nvt@note@font{\nvt@main@font}
  }
  \newfontfamily\nvt@notefont{\nvt@note@font}[\nvt@note@feat]
  \ifthenelse{\equal{\nvt@desc@feat}{}}{\def\nvt@temp@s{}}{\def\nvt@temp@s{[\nvt@desc@feat]}}
  \xdef\log@notefont{\string\setfont{note}{\nvt@note@font}\nvt@temp@s}
  % deco font:
  \ifdefined\nvt@deco@font\else\xdef\nvt@deco@font{\nvt@main@font}\fi
  \ifdefined\nvt@deco@feat\else\gdef\nvt@deco@feat{}\fi
  \IfFontExistsTF{\nvt@deco@font}{}{
    \nvt@warnNFF{\nvt@deco@font} % No font found.
    \xdef\deco@font{\nvt@main@font}
  }
  \newfontfamily\nvt@decofont{\nvt@deco@font}[\nvt@deco@feat]
  \ifthenelse{\equal{\nvt@deco@feat}{}}{\def\nvt@temp@s{}}{\def\nvt@temp@s{[\nvt@deco@feat]}}
  \xdef\log@decofont{\string\setfont{deco}{\nvt@deco@font}\nvt@temp@s}
  % alt font:
  \ifdefined\nvt@alt@font\else\xdef\nvt@alt@font{\nvt@main@font}\fi
  \ifdefined\nvt@alt@feat\else\gdef\nvt@alt@feat{}\fi
  \IfFontExistsTF{\nvt@alt@font}{}{
    \nvt@warnNFF{\nvt@alt@font} % No font found.
    \xdef\nvt@alt@font{\nvt@main@font}
  }
  \newfontfamily\nvt@altfont{\nvt@alt@font}[\nvt@alt@feat]
  \ifthenelse{\equal{\nvt@alt@feat}{}}{\def\nvt@temp@s{}}{\def\nvt@temp@s{[\nvt@alt@feat]}}
  \xdef\log@altfont{\string\setfont{alt}{\nvt@alt@font}\nvt@temp@s}
  % init font:
  \ifdefined\nvt@init@font\else\xdef\nvt@init@font{\nvt@main@font}\fi
  \ifdefined\nvt@init@feat\else\gdef\nvt@init@feat{}\fi
  \IfFontExistsTF{\nvt@init@font}{}{
    \nvt@warnNFF{\nvt@init@font} % No font found.
    \xdef\nvtinit@font{\nvt@main@font}
  }
  \newfontfamily\nvt@initfont{\nvt@init@font}[\nvt@init@feat]
  \ifthenelse{\equal{\nvt@init@feat}{}}{\def\nvt@temp@s{}}{\def\nvt@temp@s{[\nvt@init@feat]}}
  \xdef\log@initfont{\string\setfont{init}{\nvt@init@font}\nvt@temp@s}
}
%%


%%
\newcommand\fontclass[1]{%
  \IfInteger{#1}{%
    \gdef\nvt@fontclass{#1}%
  }{%
    \ClassWarning{novelette}{\string\fontclass\space accepts only integer.^^J%
      Using default fontclass 0.}%
    \gdef\nvt@fontclass{0}%
  }%
}
\fontclass{0} % Default
\@onlypreamble\fontclass
%%


%%
\endinput
%%
%% End of file `novelette-fonts.sty'


