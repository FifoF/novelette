%% This is file `novelette-utilities.sty',
%% part of `novelette' document class.
%% Copyright 2023 Robert Allgeyer.
%%
%% This file may be distributed and/or modified under the
%% conditions of the LaTeX Project Public License, either version 1.3c
%% of this license or (at your option) any later version.
%% The latest version of this license is in
%%    http://www.latex-project.org/lppl.txt
%% and version 1.3c or later is part of all distributions of LaTeX
%% version 2005/12/01 or later.
%%
\ProvidesFile{novelette-utilities.sty}%
[2023/01/20 v0.2 LaTeX file (macros used by other sty files)]
%%



%% UTILITY MACROS
%% ----------------------------------------------------------------------------
% These are used by other packages and novelette-*.sty files, during setup.



%% FRONTMATTER, MAINMATTER, BACKMATTER
\def\nvt@rectohead{}
\def\nvt@versohead{}
% These commands can only be used in document body:
\def\frontmatter{%
  \ifnvt@mainmatter%
    \nvt@error{No more frontmatter after mainmatter.}
  \fi%
  \ifnvt@frontmatter\else%
    \pagenumbering{roman}%
    \setcounter{page}{1}%
    \pagestyle{empty}%
  \fi%
  \global\nvt@frontmattertrue%
  \global\nvt@mainmatterfalse%
}
%%
\def\mainmatter{ % Restarts page to 1, arabic numbers; freeze frontpagecount.
  \ifnvt@mainmatter\else%
    \cleartorecto%
    \pagenumbering{arabic}%
    \setcounter{page}{1}%
    \pagestyle{fancy}%
    \gdef\nvt@versohead{\allsmcp{\thetitle}}%
    \gdef\nvt@rectohead{\textit{\theauthor}}%
  \fi%
  \global\nvt@frontmatterfalse%
  \global\nvt@mainmattertrue%
}
%%
\def\backmatter{% Usually not used.
  \cleartorecto%
  \gdef\nvt@versohead{}%
  \gdef\nvt@rectohead{}%
}
%%


\def\nvt@signoffmsg{Processed with lualatex. Novelette rev. \nvt@revreq.}


%% This code block is not implemented. Possible future use.
%\def\nvt@getepoch{%
%  \directlua{
%    local jack = os.time()
%    tex.sprint(jack)
%  }%
%}
% Code by user `egreg' at tex.stackexchange.com, q. 62010 :
% Puts environment variable #2 into macro #1.
% Example: \getenv[\userhome]{HOME}
%\ExplSyntaxOn
%\NewDocumentCommand{\getenv}{om}
% {
%  \sys_get_shell:nnN { kpsewhich ~ --var-value ~ #2 } { } \l_tmpa_tl
%  \tl_trim_spaces:N \l_tmpa_tl
%  \IfNoValueTF { #1 }
%   {
%    \tl_use:N \l_tmpa_tl
%   }
%   {
%    \tl_set_eq:NN #1 \l_tmpa_tl
%   }
% }
%\ExplSyntaxOff
% End code by egreg.
%\getenv[\nvt@invocation]{processedbynovelette}
%\edef\nvt@rightnow{\nvt@getepoch}
%\IfInteger{\nvt@invocation}{%
%  \FPsub{\nvt@temp@n}{\nvt@rightnow}{\nvt@invocation}%
%  \FPabs{\nvt@temp@n}{\nvt@temp@n}%
%  \FPiflt{\nvt@temp@n}{20}%
%    \gdef\nvt@signoffmsg{Processed with lualatex by novelette script.}%
%  \else%
%    \long\gdef\nvt@signoffmsg{Processed with lualatex.^^J%
%      You may get better results by processing via novelette script.^^J%
%      See Novelette documentation for explanation.%
%    }%
%  \fi%
%}{%
%  \long\gdef\nvt@signoffmsg{Processed with lualatex.^^J%
%    You may get better results by processing via novelette script.^^J%
%    See Novelette documentation for explanation.%
%  }%
%}
%%


%% CHANGE MODE ON ERROR
% Detect whether an error was thrown, regardless of its source.
% If thrown, AtEndDocument changes to draft mode.
\directlua{
  local error_seen = false
  local true_cmd = token.create'use_i:nn'
  local false_cmd = token.create'use_ii:nn'
  local id = luatexbase.new_luafunction'iferrorsissued'
  token.set_lua('iferrorsissued', id)
  lua.get_functions_table()[id] = function()
    token.put_next(error_seen and true_cmd or false_cmd)
  end
  luatexbase.add_to_callback('show_error_hook', function()
    error_seen = true
    texio.write('.')
    tex.show_context()
  end, 'track_errors')
}
%%


%% Write straight quotes that TeX will not auto-convert to curly quotes:
\def\straightquote{{\addfontfeature{Ligatures=ResetAll}'}}
\def\straightdblquote{{\addfontfeature{Ligatures=ResetAll}"}}
%%


%% \memo{} does not print or save its argument. May be more than one paragraph.
% Useful when you wish to put a note to yourself in the *.tex document.
% Not the same as % comment, because anything after \memo{} prints.
\long\def\memo#1{\ignorespaces}
%%


%% \stake does not occupy much vertical space.
\gdef\stake{\rule{0pt}{.02pt}}
%%


%% Steal a sheep.
\def\baa{\looseness=-1}
%%


%% Unicode character. Four hex digits, uppercase A-F, no following space.
%% Examples: c\uni{0061}t -> cat  d\uni{006F}g -> dog
\def\uni#1{\char"#1}
%%


%% ITALICS (better than \textit or \itshape)
\long\def\ital#1{{\itshape #1\/}}
\long\def\textit#1{{\itshape #1\/}}
%%


%% BLOCK INDENT (option is integer number of \normalindent, [L,R])
\def\nvt@tabindent{0}
\newenvironment{blockindent}[1][1]{%
  \ifvmode\else\par\fi%
  \begingroup%
  \StrDel{#1}{ }[\nvt@temp@s]%
  \StrDel{\nvt@temp@s}{:}[\nvt@temp@s]%
  \StrSubstitute{\nvt@temp@s}{,}{:}[\nvt@temp@s]%
  \nvt@oktrue%
  \FPdiv{\nvt@temp@d}{\strip@pt\textwidth}{\strip@pt\normalindent}%
  \IfInteger{\nvt@temp@s}{
    \FPiflt{\nvt@temp@s}{\nvt@temp@d}%
      \setlength\leftskip{\nvt@temp@s\normalindent}%
      \xdef\nvt@tabindent{\nvt@temp@s}%
    \else\nvt@okfalse\fi%
  }{%
    \StrBefore{\nvt@temp@s}{:}[\nvt@temp@n]%
    \IfInteger{\nvt@temp@n}{%
      \FPiflt{\nvt@temp@n}{\nvt@temp@d}%
        \setlength\leftskip{\nvt@temp@n\normalindent}%
        \xdef\nvt@tabindent{\nvt@temp@n}%
      \else\nvt@okfalse\fi%
    }{\nvt@okfalse}%
    \StrBehind{\nvt@temp@s}{:}[\nvt@temp@n]%
    \IfInteger{\nvt@temp@n}{%
      \FPiflt{\nvt@temp@n}{\nvt@temp@d}%
        \setlength\rightskip{\nvt@temp@n\normalindent}%
      \else\nvt@okfalse\fi%
    }{\nvt@okfalse}%
  }%
  \setlength\nvt@temp@l{\leftskip+\rightskip+4\normalindent}%
  \ifdimcomp{\nvt@temp@l}{>}{\textwidth}{\nvt@okfalse}{}%
  \ifnvt@ok\else%
    \nvt@error{Bad option for \string\begin{blockindent}.^^J%
      Format: \string\begin{blockindent}[L,R]^^J%
      L is left indent, integer >=0 of normal paragraph indent.^^J%
      R is right indent, integer >=0 of normal paragraph indent.^^J%
      May use L alone, for only left indent.^^J%
      Remaining block width must be at least 4 normal indents.}%
  \fi%
}{%
  \ifvmode\else\par\fi%
  \endgroup%
  \gdef\nvt@tabindent{0}%
}
%%


%% TABLINE
\DeclareDocumentCommand\tabline{sO{}mm}{%
  \noindent%
  \begingroup%
  \setlength\leftskip{0pt}%
  \noindent\strut%
  \ifthenelse{\equal{\nvt@tabindent}{0}}{}{%
    \makebox[\nvt@tabindent\normalindent][r]{#2\,}%
  }%
  {#3}%
  \IfBooleanTF{#1}{%
    \space\leaders\hbox{.\,}\hfill%
  }{%
    \hfill%
  }%
  {#4}\strut\par%
  \endgroup%
}
%%


%% \init[kern]{Letter}{phrase} for optional styling first line of a chapter.
\DeclareDocumentCommand\init{O{0}mm}{%
  \noindent\smash{\addfontfeature{ScaleAgain=1.33}#2}%
  \IfDecimal{#1}{\kern#1em}{%
    \ClassWarning{novelette}{Bad kern value in \string\init, page \thepage.^^J%
      This kern does not use units, just the number (units will be em).}%
  }%
  \smcp{#3}%
}
%%


%% \cleartorecto works same as \clearpage when next page is recto.
%   If next page would be verso, a blank verso is inserted,
%   so that the following material is recto.
% \cleartoend is used at very end of book.
%   It adds a blank page. If the blank is verso, end of book.
%   But if that blank is recto, it adds a second blank page, end of book.
%   So, the book always ends with a blank verso.
\gdef\cleartorecto{
  \clearpage
  \ifodd\c@page\else
    \thispagestyle{empty}\null\clearpage
  \fi
}
\gdef\cleartoend{
  \ifnvt@cleartoend\else
    \clearpage
    \ifodd\c@page
      \thispagestyle{empty}\null\clearpage
    \fi
    \thispagestyle{empty}\null\clearpage
  \fi
  \global\nvt@cleartoendtrue
}
%%


%% BLANK PAGE
\def\blankpage{%
  \clearpage%
  \thispagestyle{empty}%
  \null%
  \clearpage%
}
%%


%% FONT LABEL
\def\nvt@fontlabel{%
  \ifnvt@didlabel\else%
    \nvt@print@UL{%
      \hspace*{\nvt@spad}\raisebox{\nvt@dscn}{%
        {\normalfont\addfontfeature{ScaleAgain=.75}Main Font: \nvt@main@font}%
      }%
    }%
    \global\nvt@didlabeltrue%
  \fi%
}
\newcommand\labelfont[1]{%
  \StrDel{#1}{ }[\nvt@temp@s]
  \nvt@okfalse
  \ifthenelse{\equal{\nvt@temp@s}{on}}{\nvt@oktrue}{}
  \ifthenelse{\equal{\nvt@temp@s}{off}}{\nvt@oktrue}{}
  \ifnvt@ok
    \ifthenelse{\equal{\nvt@mode}{final}}{}{%
      \AddToHook{shipout/foreground}{\nvt@fontlabel}%
    }%
  \else
    \nvt@error{Bad value for \string\labelfont{}.^^J%
      Either on or off. Default off}
  \fi
}
\@onlypreamble\labelfont
%%


%% PERCENT WARNING
\def\nvt@warn@percent{
  \begingroup
  \lccode`\~="0025
  \lowercase{\endgroup\gdef~{%
      \nvt@warn{Percent symbol used as comment}
    }%
  }
  \catcode`\%=13
}
\newcommand\warnpercent[1]{
  \StrDel{#1}{ }[\nvt@temp@s]
  \nvt@okfalse
  \ifthenelse{\equal{\nvt@temp@s}{on}}{
    \nvt@oktrue\global\nvt@warnpercenttrue}{}
  \ifthenelse{\equal{\nvt@temp@s}{off}}{
    \nvt@oktrue\global\nvt@warnpercentfalse}{}
  \ifnvt@ok\else
    \nvt@error{Bad value for \string\warnpercent{}.^^J%
      Either on or off. Default off}
  \fi
}
\@onlypreamble\warnpercent
%%


%% WARN IF ALERTs
\newcommand\warnalert[1]{
  \StrDel{#1}{ }[\nvt@temp@s]
  \nvt@okfalse
  \ifthenelse{\equal{\nvt@temp@s}{on}}{
    \nvt@oktrue\global\nvt@warnalerttrue}{}
  \ifthenelse{\equal{\nvt@temp@s}{off}}{
    \nvt@oktrue\global\nvt@warnalertfalse}{}
  \ifnvt@ok\else
    \nvt@err{Bad value for \string\warnalert{}.^^J%
      Either on or off. Default off}
  \fi
}
\@onlypreamble\warnalert
%%



%%
\endinput
%%
%% End of file `novelette-utilities.sty'.
