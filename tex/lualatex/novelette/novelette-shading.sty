%% This is file `novelette-shading.sty',
%% part of `novelette' document class.
%% Copyright 2023 Robert Allgeyer.
%%
%% This file may be distributed and/or modified under the
%% conditions of the LaTeX Project Public License, either version 1.3c
%% of this license or (at your option) any later version.
%% The latest version of this license is in
%%    http://www.latex-project.org/lppl.txt
%% and version 1.3c or later is part of all distributions of LaTeX
%% version 2005/12/01 or later.
%%
\ProvidesFile{novelette-shading.sty}%
[2023/01/20 v0.2 LaTeX file (shadings for margins and lines)]
%%


%% LABEL MODE, SHADE MARGINS, SHADE LINES, CHECK SIDEBEARINGS
% Novelette provides several methods for ensuring that your printed content
% is aligned with your page layout.
%   In \mode{shade}, the four margins are shaded gray. In \mode{align}
% the margins are shaded gray, and text baselines are also shaded, with the
% top of the shade at baseline, and the bottom of shade at text descender.
% Both of these modes also automatically invoke draft mode.
%   Novelette allows a small amount of padding at the side margins, so that
% protruding text does not infringe the margins. Using Lua, it is possible
% to detect whether particular font characters have excessive protrusion.
% That may occur for letters such as "J" at left, "f" at right, and is more
% likely when using Italics. Although this file and the associated *.lua
% files contain the necessary code, it is not yet enabled (needs more testing).
%   In any mode except final, each page is labeled by mode, the title changes,
% and the PDF metadata will be modified to exclude PDF/X conformance. The page
% labels are provided here. Novelette automatically switches out of final mode
% if errors or some warnings are detected, but by then it is too late to
% label the pages.
%%


%% PAGE POSITIONS
\newcommand\nvt@trim@LL[1]{% Lower left of trimsize.
  \put(.5\pagewidth-.5\nvt@trimw,-.5\pageheight-.5\nvt@trimh){#1}%
}
\newcommand\nvt@print@UL[1]{% Upper left of printable area.
  \setlength\nvt@temp@l{.5\pagewidth-.5\nvt@trimw}%
  \ifodd\c@page%
    \put(\nvt@temp@l+\nvt@mins,-.5\pageheight+.5\nvt@trimh-\nvt@mtop){#1}%
  \else%
    \put(\nvt@temp@l+\nvt@mout,-.5\pageheight+.5\nvt@trimh-\nvt@mtop){#1}%
  \fi%
}
\newcommand\nvt@print@LL[1]{% Lower left of printable area.
  \setlength\nvt@temp@l{.5\pagewidth-.5\nvt@trimw}%
  \ifodd\c@page%
    \put(\nvt@temp@l+\nvt@mins,-.5\pageheight-.5\nvt@trimh+\nvt@mbot){#1}%
  \else%
    \put(\nvt@temp@l+\nvt@mout,-.5\pageheight-.5\nvt@trimh+\nvt@mbot){#1}%
  \fi%
}
%%


%% PAGE LABELS
\def\nvt@labeldraft{%
  \AddToHook{shipout/foreground}{%
    \nvt@print@UL{%
      \hspace*{\nvt@spad}\raisebox{\nvt@dscn}{%
        {\normalfont\addfontfeature{ScaleAgain=.75} MODE:DRAFT}%
  }}}%
}
\def\nvt@labelshade{%
  \AddToHook{shipout/foreground}{%
    \nvt@print@UL{%
      \hspace*{\nvt@spad}\raisebox{\nvt@dscn}{%
        {\normalfont\addfontfeature{Scale=.75} MODE:SHADE}%
  }}}%
}
\def\nvt@labelalign{%
  \AddToHook{shipout/foreground}{%
    \nvt@print@UL{%
      \hspace*{\nvt@spad}\raisebox{\nvt@dscn}{%
        {\normalfont\addfontfeature{Scale=.75} MODE:ALIGN}%
  }}}%
}
%%


%% SHADE MARGINS, SHADE LINES
\newcounter{nvt@mline}
\newcommand{\nvt@bghook}{}
\newcommand{\nvt@addbg}{\g@addto@macro\nvt@bghook}
\AddToHook{shipout/background}{\put(0,-\pageheight){\nvt@bghook}}
\IfHookEmptyTF{shipout/background}{\AddToHook{shipout/background}{\relax}}{}
\ifnvt@shademargins
  \pretocmd\@kernel@before@shipout@background{
    % Fill trim area with gray. If sheetfeed, do not extend gray outside trim:
    \nvt@trim@LL{{\nvt@gray{.6}\rule{\nvt@trimw}{\nvt@mbot}}}%
    \nvt@trim@LL{{\nvt@gray{.6}%
      \rule[\nvt@trimh-\nvt@mtop]{\nvt@trimw}{\nvt@mtop}%
    }}
    \ifodd\c@page
      \nvt@trim@LL{{\nvt@gray{.6}\rule{\nvt@mins}{\nvt@trimh}}}
      \nvt@trim@LL{\hspace*{\nvt@trimw-\nvt@mout}{\nvt@gray{.6}%
        \rule{\nvt@mout}{\nvt@trimh}%
      }}
    \else
      \nvt@trim@LL{{\nvt@gray{.6}\rule{\nvt@mout}{\nvt@trimh}}}
      \nvt@trim@LL{\hspace*{\nvt@trimw-\nvt@mins}{\nvt@gray{.6}%
        \rule{\nvt@mins}{\nvt@trimh}%
      }}
    \fi
    \ifnvt@shadelines
      \nvt@shade@main@lines
      \ifnvt@header
        \nvt@print@UL{{\nvt@gray{.8}%
          \rule[-\nvt@leading]{\textwidth+2\nvt@spad}{\nvt@dscn}%
        }}
      \fi%
      \ifnvt@footer
        \nvt@print@LL{{\nvt@gray{.8}%
          \rule{\textwidth+2\nvt@spad}{\nvt@dscn}%
        }}
      \fi
    \fi
    \nvt@place@opening@guides
    \setlength\nvt@temp@l{\nvt@trimw-\nvt@spinew}%
    \ifodd\c@page\setlength\nvt@temp@l{0pt}\fi%
    \nvt@trim@LL{\rule{\nvt@temp@l}{0pt}{\nvt@gray{.4}%
      \rule{\nvt@spinew}{\nvt@trimh}% Spine glue zone.
    }}%
  }{\typeout{Shading applied.}}{\typeout{Shading failed.}} % Part of \pretocmd.
\fi
%%


%% Main text baselines:
\def\nvt@shade@main@lines{%
  \setcounter{nvt@mline}{0}%
  \loop%
  \nvt@print@UL{\nvt@gray{.9}%
    \hspace{\nvt@spad}%
    \setlength\nvt@temp@l{-\value{nvt@mline}\nvt@leading}%
    \addtolength\nvt@temp@l{\nvt@dscn-\nvt@leading}%
    \ifnvt@header%
      \addtolength\nvt@temp@l{-\nvt@leading-\nvt@headgap\nvt@leading}%
      \addtolength\nvt@temp@l{-\nvt@dscn}%
    \fi%
    \rule[\nvt@temp@l]{\textwidth}{\nvt@dscn}%
  }%
  \addtocounter{nvt@mline}{1}%
  \ifnum\value{nvt@mline}<\nvt@lpp%
  \repeat%
}
%%


%% OPENING GUIDES
\def\nvt@place@opening@guides{%
  \ifdefined\nvt@guidea%
    \setlength\nvt@temp@l{-\nvt@dscn-\nvt@ascn-\nvt@guidea\nvt@leading}%
    \ifnvt@header%
      \addtolength\nvt@temp@l{-\nvt@dscn-\nvt@headgap\nvt@leading}%
    \else%
      \addtolength\nvt@temp@l{\nvt@leading}%
    \fi%
    \edef\nvt@temp@s{\the\nvt@temp@l}
    \nvt@print@UL{{\nvt@gray{.8}%
      \hspace{-16pt}\rule[\nvt@temp@s]{12pt}{\nvt@dscn}%
    }}%
    \nvt@print@UL{{\nvt@gray{.8}%
      \hspace{\textwidth+2\nvt@spad+4pt}\rule[\nvt@temp@s]{12pt}{\nvt@dscn}%
    }}%
  \fi%
  \ifdefined\nvt@guideb%
    \setlength\nvt@temp@l{-\nvt@dscn-\nvt@ascn-\nvt@guideb\nvt@leading}%
    \ifnvt@header%
      \addtolength\nvt@temp@l{-\nvt@dscn-\nvt@headgap\nvt@leading}%
    \else%
      \addtolength\nvt@temp@l{\nvt@leading}%
    \fi%
    \edef\nvt@temp@s{\the\nvt@temp@l}
    \nvt@print@UL{{\nvt@gray{.8}%
      \hspace{-16pt}\rule[\nvt@temp@s]{12pt}{\nvt@dscn}%
    }}%
    \nvt@print@UL{{\nvt@gray{.8}%
      \hspace{\textwidth+2\nvt@spad+4pt}\rule[\nvt@temp@s]{12pt}{\nvt@dscn}%
    }}%
  \fi%
  \ifdefined\nvt@guidec%
    \setlength\nvt@temp@l{-\nvt@dscn-\nvt@ascn-\nvt@guidec\nvt@leading}%
    \ifnvt@header%
      \addtolength\nvt@temp@l{-\nvt@dscn-\nvt@headgap\nvt@leading}%
    \else%
      \addtolength\nvt@temp@l{\nvt@leading}%
    \fi%
    \edef\nvt@temp@s{\the\nvt@temp@l}
    \nvt@print@UL{{\nvt@gray{.8}%
      \hspace{-16pt}\rule[\nvt@temp@s]{12pt}{\nvt@dscn}%
    }}%
    \nvt@print@UL{{\nvt@gray{.8}%
      \hspace{\textwidth+2\nvt@spad+4pt}\rule[\nvt@temp@s]{12pt}{\nvt@dscn}%
    }}%
  \fi%
  \ifdefined\nvt@guided%
    \setlength\nvt@temp@l{-\nvt@dscn-\nvt@ascn-\nvt@guided\nvt@leading}%
    \ifnvt@header%
      \addtolength\nvt@temp@l{-\nvt@dscn-\nvt@headgap\nvt@leading}%
    \else%
      \addtolength\nvt@temp@l{\nvt@leading}%
    \fi%
    \edef\nvt@temp@s{\the\nvt@temp@l}
    \nvt@print@UL{{\nvt@gray{.8}%
      \hspace{-16pt}\rule[\nvt@temp@s]{12pt}{\nvt@dscn}%
    }}%
    \nvt@print@UL{{\nvt@gray{.8}%
      \hspace{\textwidth+2\nvt@spad+4pt}\rule[\nvt@temp@s]{12pt}{\nvt@dscn}%
    }}%
  \fi%
}
%%


%% LUA SIDEBEARINGS (not yet enabled)
\def\lsidebearing#1{.1em} % Testing.
\def\rsidebearing#1{.1em} % Testing.
%  \directlua{require "novelette-sidebearings"}
%  \def\lsidebearing#1{\directlua{packagedata.sidebearings.left [[#1]]}}
%  \def\rsidebearing#1{\directlua{packagedata.sidebearings.right [[#1]]}}
\def\nvt@getlsb#1{
  \setlength\nvt@temp@l{\lsidebearing{#1}}
  \FPdiv{\nvt@temp@n}{\strip@pt\nvt@temp@l}{\strip@pt\nvt@leading}
  \FPtrunc{\nvt@temp@n}{\nvt@temp@n}{3}
  #1=\nvt@temp@n, %%%%% Really comma?
}
\def\nvt@getrsb#1{
  \setlength\nvt@temp@l{\rsidebearing{#1}}
  \FPdiv{\nvt@temp@n}{\strip@pt\nvt@temp@l}{\strip@pt\nvt@leading}
  \FPtrunc{\nvt@temp@n}{\nvt@temp@n}{3}
  #1=\nvt@temp@n, %%%%% Really comma?
}
%%


%% CHANGE MODE ON ERROR (not yet fully enabled)
%% Detect whether an error was thrown, regardless of its source:
\directlua{
  local error_seen = false
  local true_cmd = token.create'use_i:nn'
  local false_cmd = token.create'use_ii:nn'
  local id = luatexbase.new_luafunction'iferrorsissued'
  token.set_lua('iferrorsissued', id)
  lua.get_functions_table()[id] = function()
    token.put_next(error_seen and true_cmd or false_cmd)
  end
  luatexbase.add_to_callback('show_error_hook', function()
    error_seen = true
    texio.write('.')
    tex.show_context()
  end, 'track_errors')
}
%% Do something about that: (TODO)
%%


%%
\endinput
%%
%% End of file `novelette-shading.sty'.
